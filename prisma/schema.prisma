
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
        
model Product {
  id          Int               @id @default(autoincrement())
  name        String
  price       Float
  stock       Int
  description String            @default("")
  categories  ProductCategory[]
  orderItems  OrderItem[]
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
}

model Category {
  id          Int               @id @default(autoincrement())
  name        String
  products    ProductCategory[]
  createdAt   DateTime          @default(now())
}

model ProductCategory {
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  category    Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId  Int

  @@id([productId, categoryId])
}

model Order {
  id            Int      @id @default(autoincrement())
  orderNumber   String   @unique
  customerName  String
  customerEmail String
  customerPhone String?
  totalAmount   Float
  status        String   @default("PENDING") // PENDING, COMPLETED, CANCELLED
  items         OrderItem[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([status])
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Restrict)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([orderId])
  @@index([productId])
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}